#!/bin/bash

# Copyright (c) 2022-2025 olli
#
# This file is part of dabo (crypto bot).
# 
# dabo is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# dabo is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with dabo. If not, see <http://www.gnu.org/licenses/>.

. /dabo/dabo-prep.sh

### MAIN ###
g_echo_note "STARTING DABO BOT $0"

touch firstloop
export FULL_LOOP=0

# am I the bot (important for functions used by analyze.sh
[[ $0 =~ dabo-bot.sh ]] && BOT=1

# cleanup trashlines in asset-histories (possibly generated by kill further of this progress)
#find asset-histories -name "*.csv" -type f | while read csv_file
#do
#  csv_timestamp=$(ls --time-style='+%Y%m%d%H%M' -l "${csv_file}" | cut -d" " -f6)
#  sed -i "/[0-9]$(date +%Y)-/d" "${csv_file}"
#  touch -t ${csv_timestamp} "${csv_file}"
#done


# run endless loop
while true
do
  # wait until next full minute in the beginning to be able to work with continue in this loop
  if [[ -f firstloop ]]
  then
    rm -f firstloop
  else
    LOOP_INTERVAL=30
    time_to_interval=$(($LOOP_INTERVAL - $(date +%s) % $LOOP_INTERVAL))
    time_to_full_interval=$(($INTERVAL - $(date +%s) % $INTERVAL))
    # Check for next general interval
    g_echo_note "NEXT LOOP in $time_to_interval seconds (Interval=${LOOP_INTERVAL}s)"
    g_echo_note "NEXT FULL LOOP in $time_to_full_interval seconds (Interval=${INTERVAL}s)"
    if [[ $time_to_full_interval -le  $time_to_interval ]]
    then
      FULL_LOOP=1
      g_echo_note "FULL INTERVAL"
      sleep ${time_to_full_interval}
      
      # wait for new ohlcv and indicator data
      sleep 5
      f_try=1
    else
      FULL_LOOP=0
      g_echo_note "SHORT INTERVAL"
      sleep ${time_to_interval}
    fi
  fi
  
  # reload config
  g_tries_delay=$(shuf -i 5-15 -n 1)
  . ../../dabo-bot.conf
  . ../../dabo-bot.override.conf

  # Timestamp
  export f_timestamp=$(g_date_print)

  if [[ $STOCK_EXCHANGE = NONE ]]
  then
    ## stop here if STOCK_EXCHANGE not present
    continue   
  fi

  # clean old data
  #[[ $FULL_LOOP = 1 ]] && find asset-histories -maxdepth 1 ! -type d ! -name "*.csv" ! -name "*.levels" ! -name "*.zones" !  -name "*.indicators-calculated" -mtime +1 -delete
  
  sleep 5
  #[[ $FULL_LOOP = 1 ]] && sleep 31
  [[ $FULL_LOOP = 1 ]] && while true
  do
    if ls fetching_data_* >/dev/null 2>&1
    then
      g_echo_note "(Try: $f_try) fetching_data_* exists. $(ls fetching_data_* 2>/dev/null). Waiting..."
      f_try=$((f_try+1))
      sleep 1
      if [[ $f_try -gt 180 ]] && (( $f_try % 60 == 0 )) 
      then
        g_echo_warn "Waiting more then $f_try seconds for finished fetching data: $(ls fetching_data_* 2>/dev/null)"
      fi 
    else
      unset f_try
      break
    fi
  done

  # Get current balance
  if [[ $FULL_LOOP = 1 ]] 
  then
    get_balance || continue
  fi

  # Get current positions
  get_positions || continue

  # Get current orders
  if [[ $FULL_LOOP = 1 ]] 
  then 
    get_orders || continue
  else
    get_orders_array
  fi

  # Get symbols and price ticker
  if [[ $FULL_LOOP = 1 ]] 
  then
    get_symbols_ticker refetchonly || g_echo_warn "Error while refetching tickers from ${STOCK_EXCHANGE}"
  else
    get_symbols_ticker
  fi

  ## Run  strategies
  if [[ $FULL_LOOP = 1 ]] 
  then
    run_strategies full
  else
    run_strategies
  fi

  # get latest transactions of traded symbols
  if [[ $FULL_LOOP = 1 ]] 
  then 
    get_transactions
    tail -n 200 "TRANSACTIONS-$STOCK_EXCHANGE.csv" >"TRANSACTIONS-latest.csv"
    calc_fifo_pnl_output_file="TRANSACTIONS_OVERVIEW-latest.csv.tmp"
    calc_fifo_pnl "TRANSACTIONS-latest.csv"
    mv "$calc_fifo_pnl_output_file" "TRANSACTIONS_OVERVIEW-latest.csv"
  fi

done

